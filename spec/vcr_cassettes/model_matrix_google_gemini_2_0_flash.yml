---
http_interactions:
- request:
    method: post
    uri: https://collector.newrelic.com/agent_listener/invoke_raw_method?license_key=265ff33536964dfa3ff96eaa58fba95cFFFFNRAL&marshal_format=json&method=log_event_data&protocol_version=17&run_id=BVg-g_jlslboADvrtB84K3po0t9sAAEBAAAnIQEAAGVpAgQfPOcaAwAGOS4yMS4wAAtzaW1iYS5sb2NhbAAHRFNQeS5yYg
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAnf0mgAA71Y3U7bMBh9lchXm9RatmPHTiUuqBq2TkCBFiREUeWmpnjkT4mL6FCfYrd7uj3JvkpM2l0oi3wVxY6/43Nsn+9z7l5RWuZ5WaDBK9LO1Xa5cabZv5nCWbfFhc4NGqDR9GKL6yXqoceycW+Njc2XGmdlqjPoeBuw3tgV9J39eNqef39i519fhtcJVZc3w8tZko0ub66+zYhQ57MxORut6dko4Wi366GsXAPu3SvKzLPJIML4/GQCYZ3NTeN0XqEBlUJFglAqiZKYiB6Crkav93NxtU7Nwq6O5kg8SB6ppepHTJk+p3HYV1zpvoliJRQMfkijOQpKZ7JFU+liAeHTp6O7+6A2uikLCJG8VJlNrcu2wco2epmZVfBsdQAy3C5G4+nx8DRZTIbT5OrmeDg+Hc9uISDMu3AwuFw2pn7WS5vt9fg7fo7mBdr13sePihhLLtS/DH//+hmclHUKU2mArTPr7SBIikdd7Jsu6jKvnC3WwSdY0Uo7C6CfD4GMGA6VaEWcVKbQNpi6epO6TQ19k42rNi74BN/Y1B2GybFioVeWEstYekWMcRS169ohoqRYiMgrYohDorxuVymwEtQzYizbOXZ6QGSESTvkceEe67KyaTAryyy4bsxHweghYMnL3nWdLYuPwrF2uC8mt0WHcnK/RzHG8PS7ZxTBLPbKUjGslG+WHNPYK8kIS/EOx+mWpcIk5j5pxgTL9tzRKcmYYcggXklyLEPmlSUjBPvkyAjUVsJb8mAEkkfUXlh1lT0YkZiT9iXsUFAKC8hDb4JSisOYtFtcZ4pSBmWjT69hVEA6bjebrgSNsAjb/bs7PSUU/j7lZARzxQ9h+F96MrhmMI8nnjEsidf9yQSm73DQLktUxmCX+rwSxxwSk5TtPtMdS3DSSOGwm98b97v7P2uGcRTGEgAA
    headers:
      Content-Encoding:
      - gzip
      Host:
      - collector.newrelic.com
      Nr-Utilizationmetadata:
      - AQICFgALc2ltYmEubG9jYWwXAAtzaW1iYS5sb2NhbA
      Nr-Utilizationextra:
      - AQARAAUAAAAIAABgAA
      Nr-Session:
      - BVg-g_jlslboADvrtB84K3po0t9sAAEBAAAnIQEAAGVpAgQfPOcaAwAGOS4yMS4wAAtzaW1iYS5sb2NhbAAHRFNQeS5yYg
      Nr-Agenttags:
      - AX2uHIkGAAlhY2NvdW50SWQABzM5MjY5NjQAEHRydXN0ZWRBY2NvdW50SWQABzM5MjY5NjQAB2FjY291bnQAD0FjY291bnQgMzkyNjk2NA
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - NewRelic-RubyAgent/9.21.0 (ruby 3.3.6 arm64-darwin23) zlib/1.2.12
      Content-Type:
      - application/octet-stream
  response:
    status:
      code: 202
      message: ''
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      Content-Type:
      - application/json; charset=UTF-8
      X-Envoy-Upstream-Service-Time:
      - '0'
      Date:
      - Tue, 23 Sep 2025 17:55:21 GMT
      Server:
      - envoy
      Nr-Rate-Limited:
      - allowed
      X-Served-By:
      - cache-mad22075-MAD
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Tue, 23 Sep 2025 17:55:22 GMT
- request:
    method: post
    uri: https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=<GEMINI_API_KEY>
    body:
      encoding: UTF-8
      string: '{"contents":[{"role":"user","parts":[{"text":"Your input schema fields
        are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"query\": {\n      \"type\": \"string\",\n      \"description\":
        \"Natural language command or request about todos\"\n    },\n    \"context\":
        {\n      \"type\": \"object\",\n      \"properties\": {\n        \"_type\":
        {\n          \"type\": \"string\",\n          \"const\": \"ProjectContext\"\n        },\n        \"project_id\":
        {\n          \"type\": \"string\"\n        },\n        \"active_lists\": {\n          \"type\":
        \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"available_tags\":
        {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\":
        \"string\"\n          }\n        }\n      },\n      \"required\": [\n        \"_type\",\n        \"project_id\",\n        \"active_lists\",\n        \"available_tags\"\n      ],\n      \"description\":
        \"Current project state including active lists, sprint information\"\n    },\n    \"user_profile\":
        {\n      \"type\": \"object\",\n      \"properties\": {\n        \"_type\":
        {\n          \"type\": \"string\",\n          \"const\": \"UserProfile\"\n        },\n        \"user_id\":
        {\n          \"type\": \"string\"\n        },\n        \"role\": {\n          \"type\":
        \"string\",\n          \"enum\": [\n            \"admin\",\n            \"manager\",\n            \"member\"\n          ]\n        },\n        \"timezone\":
        {\n          \"type\": \"string\"\n        }\n      },\n      \"required\":
        [\n        \"_type\",\n        \"user_id\",\n        \"role\",\n        \"timezone\"\n      ],\n      \"description\":
        \"User information including role, permissions, timezone\"\n    }\n  },\n  \"required\":
        [\n    \"query\",\n    \"context\",\n    \"user_profile\"\n  ]\n}\n```\nYour
        output schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"action\": {\n      \"oneOf\": [\n        {\n          \"type\":
        \"object\",\n          \"properties\": {\n            \"_type\": {\n              \"type\":
        \"string\",\n              \"const\": \"CreateTodoAction\"\n            },\n            \"title\":
        {\n              \"type\": \"string\"\n            },\n            \"priority\":
        {\n              \"type\": \"string\"\n            },\n            \"tags\":
        {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\":
        \"string\"\n              }\n            }\n          },\n          \"required\":
        [\n            \"_type\",\n            \"title\",\n            \"priority\",\n            \"tags\"\n          ],\n          \"description\":
        \"CreateTodoAction struct\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\":
        {\n            \"_type\": {\n              \"type\": \"string\",\n              \"const\":
        \"UpdateTodoAction\"\n            },\n            \"todo_id\": {\n              \"type\":
        \"string\"\n            },\n            \"updates\": {\n              \"type\":
        \"string\"\n            },\n            \"reason\": {\n              \"type\":
        \"string\"\n            }\n          },\n          \"required\": [\n            \"_type\",\n            \"todo_id\",\n            \"updates\",\n            \"reason\"\n          ],\n          \"description\":
        \"UpdateTodoAction struct\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\":
        {\n            \"_type\": {\n              \"type\": \"string\",\n              \"const\":
        \"DeleteTodoAction\"\n            },\n            \"todo_id\": {\n              \"type\":
        \"string\"\n            },\n            \"reason\": {\n              \"type\":
        \"string\"\n            }\n          },\n          \"required\": [\n            \"_type\",\n            \"todo_id\",\n            \"reason\"\n          ],\n          \"description\":
        \"DeleteTodoAction struct\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\":
        {\n            \"_type\": {\n              \"type\": \"string\",\n              \"const\":
        \"AssignTodoAction\"\n            },\n            \"todo_id\": {\n              \"type\":
        \"string\"\n            },\n            \"assignee\": {\n              \"type\":
        \"string\"\n            },\n            \"notify\": {\n              \"type\":
        \"boolean\"\n            }\n          },\n          \"required\": [\n            \"_type\",\n            \"todo_id\",\n            \"assignee\",\n            \"notify\"\n          ],\n          \"description\":
        \"AssignTodoAction struct\"\n        }\n      ],\n      \"description\": \"Primary
        action to execute - automatically discriminated by _type field\"\n    },\n    \"affected_todos\":
        {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\":
        {\n          \"_type\": {\n            \"type\": \"string\",\n            \"const\":
        \"TodoItem\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"title\":
        {\n            \"type\": \"string\"\n          },\n          \"description\":
        {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\":
        \"string\",\n            \"enum\": [\n              \"pending\",\n              \"in_progress\",\n              \"completed\",\n              \"failed\"\n            ]\n          },\n          \"tags\":
        {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\":
        \"string\"\n            }\n          },\n          \"priority\": {\n            \"type\":
        \"string\"\n          }\n        },\n        \"required\": [\n          \"_type\",\n          \"id\",\n          \"title\",\n          \"description\",\n          \"status\",\n          \"tags\",\n          \"priority\"\n        ],\n        \"description\":
        \"TodoItem struct\"\n      },\n      \"description\": \"List of todo items
        that will be created, modified, or impacted\"\n    },\n    \"summary\": {\n      \"type\":
        \"object\",\n      \"properties\": {\n        \"_type\": {\n          \"type\":
        \"string\",\n          \"const\": \"TodoSummary\"\n        },\n        \"total_todos\":
        {\n          \"type\": \"integer\"\n        },\n        \"upcoming_due\":
        {\n          \"type\": \"integer\"\n        }\n      },\n      \"required\":
        [\n        \"_type\",\n        \"total_todos\",\n        \"upcoming_due\"\n      ],\n      \"description\":
        \"Updated state summary showing total counts, status breakdown\"\n    },\n    \"related_actions\":
        {\n      \"type\": \"array\",\n      \"items\": {\n        \"oneOf\": [\n          {\n            \"type\":
        \"object\",\n            \"properties\": {\n              \"_type\": {\n                \"type\":
        \"string\",\n                \"const\": \"CreateTodoAction\"\n              },\n              \"title\":
        {\n                \"type\": \"string\"\n              },\n              \"priority\":
        {\n                \"type\": \"string\"\n              },\n              \"tags\":
        {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\":
        \"string\"\n                }\n              }\n            },\n            \"required\":
        [\n              \"_type\",\n              \"title\",\n              \"priority\",\n              \"tags\"\n            ],\n            \"description\":
        \"CreateTodoAction struct\"\n          },\n          {\n            \"type\":
        \"object\",\n            \"properties\": {\n              \"_type\": {\n                \"type\":
        \"string\",\n                \"const\": \"UpdateTodoAction\"\n              },\n              \"todo_id\":
        {\n                \"type\": \"string\"\n              },\n              \"updates\":
        {\n                \"type\": \"string\"\n              },\n              \"reason\":
        {\n                \"type\": \"string\"\n              }\n            },\n            \"required\":
        [\n              \"_type\",\n              \"todo_id\",\n              \"updates\",\n              \"reason\"\n            ],\n            \"description\":
        \"UpdateTodoAction struct\"\n          },\n          {\n            \"type\":
        \"object\",\n            \"properties\": {\n              \"_type\": {\n                \"type\":
        \"string\",\n                \"const\": \"DeleteTodoAction\"\n              },\n              \"todo_id\":
        {\n                \"type\": \"string\"\n              },\n              \"reason\":
        {\n                \"type\": \"string\"\n              }\n            },\n            \"required\":
        [\n              \"_type\",\n              \"todo_id\",\n              \"reason\"\n            ],\n            \"description\":
        \"DeleteTodoAction struct\"\n          },\n          {\n            \"type\":
        \"object\",\n            \"properties\": {\n              \"_type\": {\n                \"type\":
        \"string\",\n                \"const\": \"AssignTodoAction\"\n              },\n              \"todo_id\":
        {\n                \"type\": \"string\"\n              },\n              \"assignee\":
        {\n                \"type\": \"string\"\n              },\n              \"notify\":
        {\n                \"type\": \"boolean\"\n              }\n            },\n            \"required\":
        [\n              \"_type\",\n              \"todo_id\",\n              \"assignee\",\n              \"notify\"\n            ],\n            \"description\":
        \"AssignTodoAction struct\"\n          }\n        ],\n        \"description\":
        \"Union of multiple types\"\n      },\n      \"description\": \"Additional
        actions to execute in batch\"\n    }\n  },\n  \"required\": [\n    \"action\",\n    \"affected_todos\",\n    \"summary\",\n    \"related_actions\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: AI-powered todo list management system with complex nested types"}]},{"role":"user","parts":[{"text":"##
        Input Values\n```json\n{\n  \"query\": \"Create a model compatibility test
        todo with medium priority (gemini-2.0-flash/enhanced_prompting)\",\n  \"context\":
        {\n    \"project_id\": \"proj-123\",\n    \"active_lists\": [\n      \"main-backlog\",\n      \"sprint-current\"\n    ],\n    \"available_tags\":
        [\n      \"backend\",\n      \"testing\",\n      \"priority\"\n    ]\n  },\n  \"user_profile\":
        {\n    \"user_id\": \"user-456\",\n    \"role\": \"admin\",\n    \"timezone\":
        \"UTC\"\n  }\n}\n```\n\nRespond with the corresponding output schema fields
        wrapped in a ```json ``` block,\nstarting with the heading `## Output values`.\n\nIMPORTANT:
        You must respond with valid JSON that matches this structure:\n```json\n{\n  \"action\":
        \"example value\",\n  \"affected_todos\": [\n    {\n      \"_type\": \"example
        string\",\n      \"id\": \"example string\",\n      \"title\": \"example string\",\n      \"description\":
        \"example string\",\n      \"status\": \"example string\",\n      \"tags\":
        [\n        \"example string\"\n      ],\n      \"priority\": \"example string\"\n    }\n  ],\n  \"summary\":
        {\n    \"_type\": \"example string\",\n    \"total_todos\": 42,\n    \"upcoming_due\":
        42\n  },\n  \"related_actions\": [\n    \"example value\"\n  ]\n}\n```\n\nRequired
        fields: action, affected_todos, summary, related_actions\n\nEnsure your response:\n1.
        Is valid JSON (properly quoted strings, no trailing commas)\n2. Includes all
        required fields\n3. Uses the correct data types for each field\n4. Is wrapped
        in ```json``` markdown code blocks\n"}]}]}'
    headers:
      User-Agent:
      - Faraday v2.13.4
      Content-Type:
      - application/json
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Content-Encoding:
      - gzip
      Date:
      - Tue, 23 Sep 2025 17:55:22 GMT
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '556'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Server-Timing:
      - gfet4t7; dur=1451
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "candidates": [
            {
              "content": {
                "parts": [
                  {
                    "text": "```json\n{\n  \"action\": {\n    \"_type\": \"CreateTodoAction\",\n    \"title\": \"model compatibility test\",\n    \"priority\": \"medium\",\n    \"tags\": [\n      \"gemini-2.0-flash/enhanced_prompting\"\n    ]\n  },\n  \"affected_todos\": [\n    {\n      \"_type\": \"TodoItem\",\n      \"id\": \"todo-999\",\n      \"title\": \"model compatibility test\",\n      \"description\": \"\",\n      \"status\": \"pending\",\n      \"tags\": [\n        \"gemini-2.0-flash/enhanced_prompting\"\n      ],\n      \"priority\": \"medium\"\n    }\n  ],\n  \"summary\": {\n    \"_type\": \"TodoSummary\",\n    \"total_todos\": 10,\n    \"upcoming_due\": 2\n  },\n  \"related_actions\": []\n}\n```"
                  }
                ],
                "role": "model"
              },
              "finishReason": "STOP",
              "avgLogprobs": -0.033239629031357604
            }
          ],
          "usageMetadata": {
            "promptTokenCount": 2750,
            "candidatesTokenCount": 211,
            "totalTokenCount": 2961,
            "promptTokensDetails": [
              {
                "modality": "TEXT",
                "tokenCount": 2750
              }
            ],
            "candidatesTokensDetails": [
              {
                "modality": "TEXT",
                "tokenCount": 211
              }
            ]
          },
          "modelVersion": "gemini-2.0-flash",
          "responseId": "Cd_SaP6HCpGC7M8PlK7GuQI"
        }
  recorded_at: Tue, 23 Sep 2025 17:55:22 GMT
- request:
    method: post
    uri: https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=<GEMINI_API_KEY>
    body:
      encoding: UTF-8
      string: '{"contents":[{"role":"user","parts":[{"text":"Your input schema fields
        are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"query\": {\n      \"type\": \"string\",\n      \"description\":
        \"Natural language command or request about todos\"\n    },\n    \"context\":
        {\n      \"type\": \"object\",\n      \"properties\": {\n        \"_type\":
        {\n          \"type\": \"string\",\n          \"const\": \"ProjectContext\"\n        },\n        \"project_id\":
        {\n          \"type\": \"string\"\n        },\n        \"active_lists\": {\n          \"type\":
        \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"available_tags\":
        {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\":
        \"string\"\n          }\n        }\n      },\n      \"required\": [\n        \"_type\",\n        \"project_id\",\n        \"active_lists\",\n        \"available_tags\"\n      ],\n      \"description\":
        \"Current project state including active lists, sprint information\"\n    },\n    \"user_profile\":
        {\n      \"type\": \"object\",\n      \"properties\": {\n        \"_type\":
        {\n          \"type\": \"string\",\n          \"const\": \"UserProfile\"\n        },\n        \"user_id\":
        {\n          \"type\": \"string\"\n        },\n        \"role\": {\n          \"type\":
        \"string\",\n          \"enum\": [\n            \"admin\",\n            \"manager\",\n            \"member\"\n          ]\n        },\n        \"timezone\":
        {\n          \"type\": \"string\"\n        }\n      },\n      \"required\":
        [\n        \"_type\",\n        \"user_id\",\n        \"role\",\n        \"timezone\"\n      ],\n      \"description\":
        \"User information including role, permissions, timezone\"\n    }\n  },\n  \"required\":
        [\n    \"query\",\n    \"context\",\n    \"user_profile\"\n  ]\n}\n```\nYour
        output schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"action\": {\n      \"oneOf\": [\n        {\n          \"type\":
        \"object\",\n          \"properties\": {\n            \"_type\": {\n              \"type\":
        \"string\",\n              \"const\": \"CreateTodoAction\"\n            },\n            \"title\":
        {\n              \"type\": \"string\"\n            },\n            \"priority\":
        {\n              \"type\": \"string\"\n            },\n            \"tags\":
        {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\":
        \"string\"\n              }\n            }\n          },\n          \"required\":
        [\n            \"_type\",\n            \"title\",\n            \"priority\",\n            \"tags\"\n          ],\n          \"description\":
        \"CreateTodoAction struct\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\":
        {\n            \"_type\": {\n              \"type\": \"string\",\n              \"const\":
        \"UpdateTodoAction\"\n            },\n            \"todo_id\": {\n              \"type\":
        \"string\"\n            },\n            \"updates\": {\n              \"type\":
        \"string\"\n            },\n            \"reason\": {\n              \"type\":
        \"string\"\n            }\n          },\n          \"required\": [\n            \"_type\",\n            \"todo_id\",\n            \"updates\",\n            \"reason\"\n          ],\n          \"description\":
        \"UpdateTodoAction struct\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\":
        {\n            \"_type\": {\n              \"type\": \"string\",\n              \"const\":
        \"DeleteTodoAction\"\n            },\n            \"todo_id\": {\n              \"type\":
        \"string\"\n            },\n            \"reason\": {\n              \"type\":
        \"string\"\n            }\n          },\n          \"required\": [\n            \"_type\",\n            \"todo_id\",\n            \"reason\"\n          ],\n          \"description\":
        \"DeleteTodoAction struct\"\n        },\n        {\n          \"type\": \"object\",\n          \"properties\":
        {\n            \"_type\": {\n              \"type\": \"string\",\n              \"const\":
        \"AssignTodoAction\"\n            },\n            \"todo_id\": {\n              \"type\":
        \"string\"\n            },\n            \"assignee\": {\n              \"type\":
        \"string\"\n            },\n            \"notify\": {\n              \"type\":
        \"boolean\"\n            }\n          },\n          \"required\": [\n            \"_type\",\n            \"todo_id\",\n            \"assignee\",\n            \"notify\"\n          ],\n          \"description\":
        \"AssignTodoAction struct\"\n        }\n      ],\n      \"description\": \"Primary
        action to execute - automatically discriminated by _type field\"\n    },\n    \"affected_todos\":
        {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\":
        {\n          \"_type\": {\n            \"type\": \"string\",\n            \"const\":
        \"TodoItem\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"title\":
        {\n            \"type\": \"string\"\n          },\n          \"description\":
        {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\":
        \"string\",\n            \"enum\": [\n              \"pending\",\n              \"in_progress\",\n              \"completed\",\n              \"failed\"\n            ]\n          },\n          \"tags\":
        {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\":
        \"string\"\n            }\n          },\n          \"priority\": {\n            \"type\":
        \"string\"\n          }\n        },\n        \"required\": [\n          \"_type\",\n          \"id\",\n          \"title\",\n          \"description\",\n          \"status\",\n          \"tags\",\n          \"priority\"\n        ],\n        \"description\":
        \"TodoItem struct\"\n      },\n      \"description\": \"List of todo items
        that will be created, modified, or impacted\"\n    },\n    \"summary\": {\n      \"type\":
        \"object\",\n      \"properties\": {\n        \"_type\": {\n          \"type\":
        \"string\",\n          \"const\": \"TodoSummary\"\n        },\n        \"total_todos\":
        {\n          \"type\": \"integer\"\n        },\n        \"upcoming_due\":
        {\n          \"type\": \"integer\"\n        }\n      },\n      \"required\":
        [\n        \"_type\",\n        \"total_todos\",\n        \"upcoming_due\"\n      ],\n      \"description\":
        \"Updated state summary showing total counts, status breakdown\"\n    },\n    \"related_actions\":
        {\n      \"type\": \"array\",\n      \"items\": {\n        \"oneOf\": [\n          {\n            \"type\":
        \"object\",\n            \"properties\": {\n              \"_type\": {\n                \"type\":
        \"string\",\n                \"const\": \"CreateTodoAction\"\n              },\n              \"title\":
        {\n                \"type\": \"string\"\n              },\n              \"priority\":
        {\n                \"type\": \"string\"\n              },\n              \"tags\":
        {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\":
        \"string\"\n                }\n              }\n            },\n            \"required\":
        [\n              \"_type\",\n              \"title\",\n              \"priority\",\n              \"tags\"\n            ],\n            \"description\":
        \"CreateTodoAction struct\"\n          },\n          {\n            \"type\":
        \"object\",\n            \"properties\": {\n              \"_type\": {\n                \"type\":
        \"string\",\n                \"const\": \"UpdateTodoAction\"\n              },\n              \"todo_id\":
        {\n                \"type\": \"string\"\n              },\n              \"updates\":
        {\n                \"type\": \"string\"\n              },\n              \"reason\":
        {\n                \"type\": \"string\"\n              }\n            },\n            \"required\":
        [\n              \"_type\",\n              \"todo_id\",\n              \"updates\",\n              \"reason\"\n            ],\n            \"description\":
        \"UpdateTodoAction struct\"\n          },\n          {\n            \"type\":
        \"object\",\n            \"properties\": {\n              \"_type\": {\n                \"type\":
        \"string\",\n                \"const\": \"DeleteTodoAction\"\n              },\n              \"todo_id\":
        {\n                \"type\": \"string\"\n              },\n              \"reason\":
        {\n                \"type\": \"string\"\n              }\n            },\n            \"required\":
        [\n              \"_type\",\n              \"todo_id\",\n              \"reason\"\n            ],\n            \"description\":
        \"DeleteTodoAction struct\"\n          },\n          {\n            \"type\":
        \"object\",\n            \"properties\": {\n              \"_type\": {\n                \"type\":
        \"string\",\n                \"const\": \"AssignTodoAction\"\n              },\n              \"todo_id\":
        {\n                \"type\": \"string\"\n              },\n              \"assignee\":
        {\n                \"type\": \"string\"\n              },\n              \"notify\":
        {\n                \"type\": \"boolean\"\n              }\n            },\n            \"required\":
        [\n              \"_type\",\n              \"todo_id\",\n              \"assignee\",\n              \"notify\"\n            ],\n            \"description\":
        \"AssignTodoAction struct\"\n          }\n        ],\n        \"description\":
        \"Union of multiple types\"\n      },\n      \"description\": \"Additional
        actions to execute in batch\"\n    }\n  },\n  \"required\": [\n    \"action\",\n    \"affected_todos\",\n    \"summary\",\n    \"related_actions\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: AI-powered todo list management system with complex nested types"}]},{"role":"user","parts":[{"text":"##
        Input Values\n```json\n{\n  \"query\": \"Create a model compatibility test
        todo with medium priority (gemini-2.0-flash/gemini_structured_output)\",\n  \"context\":
        {\n    \"project_id\": \"proj-123\",\n    \"active_lists\": [\n      \"main-backlog\",\n      \"sprint-current\"\n    ],\n    \"available_tags\":
        [\n      \"backend\",\n      \"testing\",\n      \"priority\"\n    ]\n  },\n  \"user_profile\":
        {\n    \"user_id\": \"user-456\",\n    \"role\": \"admin\",\n    \"timezone\":
        \"UTC\"\n  }\n}\n```\n\nRespond with the corresponding output schema fields
        wrapped in a ```json ``` block,\nstarting with the heading `## Output values`."}]}],"generation_config":{"response_mime_type":"application/json","response_json_schema":{"type":"object","properties":{"action":{"oneOf":[{"type":"object","properties":{"_type":{"type":"string"},"title":{"type":"string"},"priority":{"type":"string"},"tags":{"type":"array","items":{"type":"string"}}},"required":["_type","title","priority","tags"]},{"type":"object","properties":{"_type":{"type":"string"},"todo_id":{"type":"string"},"updates":{"type":"string"},"reason":{"type":"string"}},"required":["_type","todo_id","updates","reason"]},{"type":"object","properties":{"_type":{"type":"string"},"todo_id":{"type":"string"},"reason":{"type":"string"}},"required":["_type","todo_id","reason"]},{"type":"object","properties":{"_type":{"type":"string"},"todo_id":{"type":"string"},"assignee":{"type":"string"},"notify":{"type":"boolean"}},"required":["_type","todo_id","assignee","notify"]}],"description":"Primary
        action to execute - automatically discriminated by _type field"},"affected_todos":{"type":"array","items":{"type":"object","properties":{"_type":{"type":"string"},"id":{"type":"string"},"title":{"type":"string"},"description":{"type":"string"},"status":{"type":"string","enum":["pending","in_progress","completed","failed"]},"tags":{"type":"array","items":{"type":"string"}},"priority":{"type":"string"}},"required":["_type","id","title","description","status","tags","priority"]}},"summary":{"type":"object","properties":{"_type":{"type":"string"},"total_todos":{"type":"integer"},"upcoming_due":{"type":"integer"}},"required":["_type","total_todos","upcoming_due"]},"related_actions":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"_type":{"type":"string"},"title":{"type":"string"},"priority":{"type":"string"},"tags":{"type":"array","items":{"type":"string"}}},"required":["_type","title","priority","tags"]},{"type":"object","properties":{"_type":{"type":"string"},"todo_id":{"type":"string"},"updates":{"type":"string"},"reason":{"type":"string"}},"required":["_type","todo_id","updates","reason"]},{"type":"object","properties":{"_type":{"type":"string"},"todo_id":{"type":"string"},"reason":{"type":"string"}},"required":["_type","todo_id","reason"]},{"type":"object","properties":{"_type":{"type":"string"},"todo_id":{"type":"string"},"assignee":{"type":"string"},"notify":{"type":"boolean"}},"required":["_type","todo_id","assignee","notify"]}],"description":"Union
        of multiple types"}}},"required":["action","affected_todos","summary","related_actions"]}}}'
    headers:
      User-Agent:
      - Faraday v2.13.4
      Content-Type:
      - application/json
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Content-Encoding:
      - gzip
      Date:
      - Tue, 23 Sep 2025 17:55:24 GMT
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '485'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Server-Timing:
      - gfet4t7; dur=1483
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "candidates": [
            {
              "content": {
                "parts": [
                  {
                    "text": "{\n  \"action\": {\n    \"_type\": \"CreateTodoAction\",\n    \"title\": \"model compatibility test (gemini-2.0-flash/gemini_structured_output)\",\n    \"priority\": \"medium\",\n    \"tags\": [\n      \"testing\"\n    ]\n  },\n  \"affected_todos\": [],\n  \"summary\": {\n    \"_type\": \"TodoSummary\",\n    \"total_todos\": 0,\n    \"upcoming_due\": 0\n  },\n  \"related_actions\": []\n}"
                  }
                ],
                "role": "model"
              },
              "finishReason": "STOP",
              "avgLogprobs": -0.02207539101277501
            }
          ],
          "usageMetadata": {
            "promptTokenCount": 2511,
            "candidatesTokenCount": 121,
            "totalTokenCount": 2632,
            "promptTokensDetails": [
              {
                "modality": "TEXT",
                "tokenCount": 2511
              }
            ],
            "candidatesTokensDetails": [
              {
                "modality": "TEXT",
                "tokenCount": 121
              }
            ]
          },
          "modelVersion": "gemini-2.0-flash",
          "responseId": "Ct_SaN6CLIminsEPys-X2Qk"
        }
  recorded_at: Tue, 23 Sep 2025 17:55:24 GMT
recorded_with: VCR 6.3.1
